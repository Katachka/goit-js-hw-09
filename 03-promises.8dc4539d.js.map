{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAsBvC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgB,C,SAAEF,E,MAAUC,GAC5BE,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQL,GAERM,EAAON,EAAc,GAEtBD,EAAM,G,CAhCbL,EAAQc,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOlB,EAAQK,MAAMc,OAEjC,IAAK,IAAIC,EAAW,EAAGA,GAAYpB,EAAQqB,OAAOF,MAAOC,IACvDjB,EAAciB,EAAUH,GACrBK,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAyB,OAAOC,QAAQ,uBAAqBpB,QAAiBC,OACnDoB,QAAMC,IAAI,uBAAqBtB,QAAiBC,MAAU,IAE7DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAyB,OAAOK,QAAQ,sBAAoBxB,QAAiBC,OAClDoB,QAAMC,IAAI,sBAAoBtB,QAAeC,MAAU,IAE7DY,GAASC,OAAOlB,EAAQ6B,KAAKV,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(formRef.delay.value);\n\n  for (let position = 1; position <= formRef.amount.value; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += Number(formRef.step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const objectPromise = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(objectPromise);\n      } else {\n        reject(objectPromise);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","objectPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","position1","amount","then","Notify","success","console","log","catch","failure","step"],"version":3,"file":"03-promises.8dc4539d.js.map"}